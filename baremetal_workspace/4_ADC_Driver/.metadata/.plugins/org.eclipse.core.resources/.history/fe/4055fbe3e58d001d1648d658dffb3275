/*
 * USART_Main_Control.c
 *
 *  Created on: Aug 25, 2022
 *      Author: User
 */

#include "USART_Main_Control.h"
#include <stdio.h>

#define GPIO_PIN_2 (0U<<2)
#define GPIO_PIN_3 (1U<<3)

void USART2_Init(void)
{

	 // Populate the GPIO structure
	GPIOA->MODER  |=  (GPIO_PIN_2 | GPIO_PIN_3);
    // Set Alternate Function
	GPIOA->PUPDR  |= (0U<<3|1U<<2);

	// Populate the USART structure
	USART_InitTypeDef.USART_BaudRate             = 115200;
	USART_InitTypeDef.USART_Mode                 = USART_Mode_Tx | USART_Mode_Rx ;
	USART_InitTypeDef.USART_HardwareFlowControl  = USART_HardwareFlowControl_None;
	USART_InitTypeDef.USART_Parity               = USART_Parity_No;
	USART_InitTypeDef.USART_StopBits             = USART_StopBits_1;
	USART_InitTypeDef.USART_WordLength           = USART_WordLength_8b;

	/* 1.  Enable the USART2 and GPIOA peripheral clock */
	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE);
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2,ENABLE);

	/* 2. PA2 is UART2_Tx and PA3 is UART2_Rx when appropriately configured in
	* Alternate Function Register of Pin */
	/* Pin Alternate Configuration */
	GPIO_Init(GPIOA, &GPIO_InitStruct);
	/* pin 2 is Tx */
	GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_USART2);
	/* Pin 3 is Rx */
	GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_USART2);

	/* Initialize Uart Engine */
	USART_Init(USART2, &USART_InitStruct);

	USART_Cmd(USART2,ENABLE);
}

 void debugTraceInfo(char *msg)
{
   for(uint32_t i = 0 ; i < strlen(msg) ; i++)
   {
	   while(USART_GetFlagStatus(USART2,USART_FLAG_TXE) != SET );
	   USART_SendData(USART2,msg[i]);
   }
}


 struct __FILE { int handle; };
 FILE __stdin  = {0};
 FILE __stdout = {1};
 FILE __stderr = {2};

 /* Called by C library console/file output */
 int fputc(int c, FILE *f)
 {
	  while(USART_GetFlagStatus(USART2,USART_FLAG_TXE) != SET );
      USART_SendData(USART2,c);  /* write the character to console */
      return 0;
 }


